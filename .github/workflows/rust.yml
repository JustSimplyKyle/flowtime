name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install -y pkg-config libpango1.0-dev libgraphene-1.0-dev librust-glib-sys-dev
    - name: Install cross
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && rustup target add x86_64-unknown-linux-musl x86_64-pc-windows-gnu x86_64-apple-darwin
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      env:
        PKG_CONFIG_ALLOW_CROSS: 1
      shell: bash
      working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        target: ["x86_64-unknown-linux-musl", "x86_64-apple-darwin", "x86_64-pc-windows-gnu"]
      max-parallel: 3

    outputs:
      binaries: ${{ steps.build.outputs.binaries }}

  publish:
    needs: build
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Publish Release
      id: publish
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ needs.build.outputs.binaries }}
        tag_name: v${{ github.ref }}
        name: Release ${{ github.ref }}
        body: ''
